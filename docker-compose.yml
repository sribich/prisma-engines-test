version: '3'
services:
  pgbouncer:
    image: brainsam/pgbouncer:latest
    restart: unless-stopped
    environment:
      DB_HOST: 'postgres11'
      DB_PORT: '5432'
      DB_USER: 'postgres'
      DB_PASSWORD: 'prisma'
      POOL_MODE: 'transaction'
      MAX_CLIENT_CONN: '1000'
    networks:
      - databases
    ports:
      - '6432:6432'

  postgres12:
    build:
      context: ./docker/images/postgres-ext
      args:
        POSTGRES_VERSION: 12
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_PASSWORD: 'prisma'
    ports:
      - '5434:5432'
    networks:
      - databases

  postgres13:
    build:
      context: ./docker/images/postgres-ext
      args:
        POSTGRES_VERSION: 13
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_PASSWORD: 'prisma'
    ports:
      - '5435:5432'
    networks:
      - databases

  postgres14:
    build:
      context: ./docker/images/postgres-ext
      args:
        POSTGRES_VERSION: 14
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_PASSWORD: 'prisma'
      POSTGRES_HOST_AUTH_METHOD: 'md5'
      POSTGRES_INITDB_ARGS: '--auth-host=md5'
    ports:
      - '5437:5432'
    networks:
      - databases

  postgres15:
    build:
      context: ./docker/images/postgres-ext
      args:
        POSTGRES_VERSION: 15
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_PASSWORD: 'prisma'
      POSTGRES_HOST_AUTH_METHOD: 'md5'
      POSTGRES_INITDB_ARGS: '--auth-host=md5'
    ports:
      - '5438:5432'
    networks:
      - databases

  postgres16:
    build:
      context: ./docker/images/postgres-ext
      args:
        POSTGRES_VERSION: 16
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_PASSWORD: 'prisma'
      POSTGRES_HOST_AUTH_METHOD: 'md5'
      POSTGRES_INITDB_ARGS: '--auth-host=md5'
    ports:
      - '5439:5432'
    networks:
      - databases

  mysql-5-6:
    image: mysql:5.6.50
    command: mysqld --table_definition_cache=2000
    restart: unless-stopped
    platform: linux/x86_64
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: prisma
      MYSQL_DATABASE: prisma
    ports:
      - '3309:3306'
    networks:
      - databases
    tmpfs: /var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  mysql-5-7:
    image: mysql:5.7.44
    command: mysqld
    restart: unless-stopped
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: prisma
      MYSQL_DATABASE: prisma
    ports:
      - '3306:3306'
    networks:
      - databases
    tmpfs: /var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  mysql-8-0:
    image: mysql:8.0.28
    command: mysqld
    restart: unless-stopped
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: prisma
      MYSQL_DATABASE: prisma
    ports:
      - '3307:3306'
    networks:
      - databases
    tmpfs: /var/lib/mysql8
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  mariadb-10-0:
    image: mariadb:10
    restart: unless-stopped
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: prisma
      MYSQL_DATABASE: prisma
    ports:
      - '3308:3306'
    networks:
      - databases
    tmpfs: /var/lib/mariadb

  mariadb-11-0:
    image: mariadb:11
    restart: unless-stopped
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: prisma
      MYSQL_DATABASE: prisma
    ports:
      - '3308:3306'
    networks:
      - databases
    tmpfs: /var/lib/mariadb

  vitess-test-8_0:
    image: vitess/vttestserver:mysql80@sha256:53a2d2f58ecf8e6cf984c725612f7651c4fc7ac9bc7d198dbd9964d50e28b9a2
    restart: unless-stopped
    ports:
      - 33807:33807
    environment:
      PORT: 33804
      KEYSPACES: 'test'
      NUM_SHARDS: '1'
      MYSQL_BIND_HOST: '0.0.0.0'
      FOREIGN_KEY_MODE: 'disallow'
      ENABLE_ONLINE_DDL: false
      MYSQL_MAX_CONNECTIONS: 100000
      TABLET_REFRESH_INTERVAL: '100ms'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h127.0.0.1', '-P33807']
      interval: 5s
      timeout: 2s
      retries: 20

  vitess-shadow-8_0:
    image: vitess/vttestserver:mysql80@sha256:53a2d2f58ecf8e6cf984c725612f7651c4fc7ac9bc7d198dbd9964d50e28b9a2
    restart: unless-stopped
    ports:
      - 33808:33807
    environment:
      PORT: 33804
      KEYSPACES: 'shadow'
      NUM_SHARDS: '1'
      MYSQL_BIND_HOST: '0.0.0.0'
      FOREIGN_KEY_MODE: 'disallow'
      ENABLE_ONLINE_DDL: false
      MYSQL_MAX_CONNECTIONS: 100000
      TABLET_REFRESH_INTERVAL: '500ms'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h127.0.0.1', '-P33807']
      interval: 5s
      timeout: 2s
      retries: 20

  otel:
    image: jaegertracing/all-in-one:1.35
    restart: unless-stopped
    environment:
      COLLECTOR_OTLP_ENABLED: 'true'
      COLLECTOR_ZIPKIN_HOST_PORT: ':9411'
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ${PWD}/.docker/config/prometheus:/prometheus-data
    command: --config.file=/prometheus-data/prometheus.yml
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    volumes:
      - ${PWD}/.docker/config/grafana/datasources:/etc/grafana/provisioning/datasources/
      - ${PWD}/.docker/config/grafana/dashboards:/etc/grafana/provisioning/dashboards/
    ports:
      - 3000:3000

networks:
  databases: null
